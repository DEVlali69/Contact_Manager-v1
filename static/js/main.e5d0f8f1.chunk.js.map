{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactinfo","displayInfo","document","getElementById","style","transform","onClickDelete","delete","t0","alert","_this2","_this$props$contact","name","email","phone","className","onClick","cursor","color","float","bind","Link","to","Contacts","Fragment","contacts_Contact","textInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e5d0f8f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  // componentDidUpdate() {\r\n  //   console.log(\"component didUpdate\");\r\n  // }\r\n\r\n  // componentWillUpdate() {\r\n  //   console.log(\"component WillUpdate\");\r\n  // }\r\n\r\n  //using jsonplaceholder for dummy dataset. we can use fetch in place of axios\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n\r\n    this.setState({ contacts: res.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactinfo: false\r\n  };\r\n\r\n  displayInfo = () => {\r\n    this.setState({ showContactinfo: !this.state.showContactinfo });\r\n\r\n    document.getElementById(\"info\").style.transform = this.state.showContactinfo\r\n      ? \"rotate(0deg)\"\r\n      : \"rotate(180deg)\";\r\n  };\r\n\r\n  onClickDelete = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    } catch (e) {\r\n      alert(e);\r\n      dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactinfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                <i\r\n                  id=\"info\"\r\n                  onClick={this.displayInfo}\r\n                  className=\"fas fa-chevron-circle-down\"\r\n                  style={{ cursor: \"pointer\", color: \"#007bff\" }}\r\n                />\r\n                &nbsp;\r\n                {name}\r\n                <div style={{ float: \"right\" }}>\r\n                  <i\r\n                    className=\"fas fa-times\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"grey\"\r\n                    }}\r\n                    onClick={this.onClickDelete.bind(this, id, dispatch)}\r\n                  />\r\n                  &nbsp;&nbsp;\r\n                  <Link to={`/contact/edit/${id}`}>\r\n                    <i\r\n                      className=\"fas fa-user-edit\"\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        float: \"left\",\r\n                        color: \"#007bff\"\r\n                      }}\r\n                    />\r\n                  </Link>\r\n                </div>\r\n              </h4>\r\n              {showContactinfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\"> id : {id}</li>\r\n                  <li className=\"list-group-item\"> name : {name}</li>\r\n                  <li className=\"list-group-item\"> email : {email}</li>\r\n                  <li className=\"list-group-item\"> phone : {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-5 margin-3\">\r\n                <span className=\"text-warning\">Contact</span> List\r\n              </h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst textInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label} </label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\ntextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\ntextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\nexport default textInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required!\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required!\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required!\" } });\r\n      return;\r\n    }\r\n\r\n    //es6 stntax : if the key and value are the same you dont need to write it as name: name etc\r\n    const newContact = {\r\n      // id: uuid(),\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    const res = await axios.post(\r\n      `https://jsonplaceholder.typicode.com/users/`,\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    //clear state after adding\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //redirect after adding\r\n    this.props.history.push(\"../\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 \">\r\n              <div className=\"card-header \">\r\n                <h3 className=\"card-title\">Add Contact</h3>\r\n                <h6 className=\"card-subtitle text-muted\">\r\n                  Enter contact details...\r\n                </h6>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"enter phone number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact \"\r\n                    className=\"btn btn-block btn-primary\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n// import uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name is required!\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email is required!\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone is required!\" } });\r\n      return;\r\n    }\r\n\r\n    const updateContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {}\r\n    });\r\n\r\n    //redirect after adding\r\n    this.props.history.push(\"../../\");\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3 \">\r\n              <div className=\"card-header \">\r\n                <h3 className=\"card-title\">Edit Contact:</h3>\r\n                <h6 className=\"card-subtitle text-muted\">\r\n                  Edit Contact Details:\r\n                </h6>\r\n              </div>\r\n\r\n              <div className=\"card-body\">\r\n                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"enter name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"enter phone number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact \"\r\n                    className=\"btn btn-block btn-primary\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-collapsible navbar-dark bg-primary mb-3 py-1\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          <i className=\"fas fa-address-book\" /> {branding}\r\n        </Link>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link active\">\r\n                <i className=\"fas fa-home\" />\r\n                &nbsp; Home\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link active\">\r\n                <i className=\"fas fa-plus-circle\" />\r\n                &nbsp; Add\r\n              </Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link active\">\r\n                <i className=\"fas fa-users\" />\r\n                &nbsp; About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h6 className=\"display-5 text-muted\">About Contact Manager</h6>\r\n      <hr />\r\n      <h1 className=\"display-1 text-center text-primary\">\r\n        <i className=\"fas fa-address-book\" />\r\n        <br />\r\n        <span className=\"text-dark display-2\">CONTACT MANAGER</span>\r\n      </h1>\r\n      <hr />\r\n      <p className=\"lead\">A Simple App to Manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-5 text-dark text-center\">\r\n        <span className=\"text-danger\">404</span> Page Not Found\r\n      </h1>\r\n      <h6 className=\"text-muted text-center\">\r\n        Sorry, this page does not exist!\r\n      </h6>\r\n      <hr />\r\n      <h1 className=\"display-1 text-center text-primary\">\r\n        <i className=\"fas fa-address-book\" />\r\n        <br />\r\n        <span className=\"text-secondary display-2\">CONTACT MANAGER</span>\r\n      </h1>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nclass Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    body: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/posts/1\")\r\n      .then(response => response.json())\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          body: data.body\r\n        })\r\n      );\r\n  }\r\n\r\n  /*\r\n  componentWillMount() {\r\n    console.log(\"component willMount\");\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log(\"component didUpdate\");\r\n  }\r\n\r\n  componentWillUpdate() {\r\n    console.log(\"component WillUpdate\");\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextState) {\r\n    console.log(\"componentWillReceiveProps\");\r\n  }\r\n  */\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{title}</h1> <hr />\r\n        <h1>{body}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Test;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport EditContact from \"./components/contacts/EditContact\";\r\nimport Header from \"./components/layout/Header\";\r\nimport About from \"./components/pages/About\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\nimport Test from \"./components/test/Test\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Provider } from \"./context\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Header branding=\"Contact Manager\" />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route exact path=\"/\" component={Contacts} />\r\n                <Route exact path=\"/about\" component={About} />\r\n                <Route exact path=\"/test\" component={Test} />\r\n                <Route exact path=\"/contact/add\" component={AddContact} />\r\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route exact path=\"\" component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n// ReactDOM.render(what to render, where to render);\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}